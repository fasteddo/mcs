// license:BSD-3-Clause
// copyright-holders:Edward Fast

using System;

using uint8_t = System.Byte;


namespace mame
{
    partial class cclimber_state : driver_device
    {
        void cclimber_decode(uint8_t [,] convtable)
        {
            Pointer<uint8_t> rom = new Pointer<uint8_t>(memregion("maincpu").base_());  //uint8_t *rom = memregion("maincpu")->base();

            for (int A = 0x0000; A < 0x6000; A++)
            {
                int i;
                int j;
                uint8_t src = rom[A];

                /* pick the translation table from bit 0 of the address */
                /* and from bits 1 7 of the source data */
                i = (A & 1) | (src & 0x02) | ((src & 0x80) >> 5);

                /* pick the offset in the table from bits 0 2 4 6 of the source data */
                j = (src & 0x01) | ((src & 0x04) >> 1) | ((src & 0x10) >> 2) | ((src & 0x40) >> 3);

                /* decode the opcodes */
                m_decrypted_opcodes[A].op = (uint8_t)((src & 0xaa) | convtable[i, j]);
            }
        }


        public void init_cclimber()
        {
            uint8_t [,] convtable = new uint8_t [8, 16]
            {
                /* 0xff marks spots which are unused and therefore unknown */
                { 0x44,0x14,0x54,0x10,0x11,0x41,0x05,0x50,0x51,0x00,0x40,0x55,0x45,0x04,0x01,0x15 },
                { 0x44,0x10,0x15,0x55,0x00,0x41,0x40,0x51,0x14,0x45,0x11,0x50,0x01,0x54,0x04,0x05 },
                { 0x45,0x10,0x11,0x44,0x05,0x50,0x51,0x04,0x41,0x14,0x15,0x40,0x01,0x54,0x55,0x00 },
                { 0x04,0x51,0x45,0x00,0x44,0x10,0xff,0x55,0x11,0x54,0x50,0x40,0x05,0xff,0x14,0x01 },
                { 0x54,0x51,0x15,0x45,0x44,0x01,0x11,0x41,0x04,0x55,0x50,0xff,0x00,0x10,0x40,0xff },
                { 0xff,0x54,0x14,0x50,0x51,0x01,0xff,0x40,0x41,0x10,0x00,0x55,0x05,0x44,0x11,0x45 },
                { 0x51,0x04,0x10,0xff,0x50,0x40,0x00,0xff,0x41,0x01,0x05,0x15,0x11,0x14,0x44,0x54 },
                { 0xff,0xff,0x54,0x01,0x15,0x40,0x45,0x41,0x51,0x04,0x50,0x05,0x11,0x44,0x10,0x14 }
            };

            cclimber_decode(convtable);
        }


        //void cclimber_state::init_cclimberj()

        //void cclimber_state::init_ckongb()

        //void cclimber_state::init_cannonb()

        //void cclimber_state::init_cannonb2()
    }
}
