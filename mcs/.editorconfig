# mcs

root = true

[*.cs]
indent_style = space
indent_size = 4
end_of_line = crlf
insert_final_newline = true
trim_trailing_whitespace = true
dotnet_diagnostic.CA1069.severity = none  # The enum member '' has the same constant value '' as member ''
dotnet_diagnostic.CA1507.severity = none  # Use nameof in place of string literal ''
dotnet_diagnostic.CA1816.severity = none  # Change '' to call GC.SuppressFinalize(object). This will prevent unnecessary finalization of the object once it has been disposed and it has fallen out of scope.
dotnet_diagnostic.CA1821.severity = none  # Remove empty Finalizers
dotnet_diagnostic.CA1822.severity = none  # Member '' does not access instance data and can be marked as static
dotnet_diagnostic.CA1845.severity = none  # Use span-based 'string.Concat' and 'AsSpan' instead of 'Substring'
dotnet_diagnostic.CA2208.severity = none  # Call the ArgumentOutOfRangeException constructor that contains a message and/or paramName parameter
dotnet_diagnostic.CA2211.severity = none  # Non-constant fields should not be visible
dotnet_diagnostic.CA2241.severity = none  # Provide correct arguments to formatting methods
dotnet_diagnostic.CA2249.severity = none  # Use 'string.Contains' instead of 'string.IndexOf' to improve readability
#dotnet_diagnostic.CS0108.severity = none  # '' hides inherited member ''. Use the new keyword if hiding was intended.
#dotnet_diagnostic.CS0114.severity = none  # '' hides inherited member ''. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword.
dotnet_diagnostic.CS0162.severity = none  # Unreachable code detected
dotnet_diagnostic.CS0168.severity = none  # The variable '' is declared but never used
dotnet_diagnostic.CS0169.severity = none  # The field '' is never used
dotnet_diagnostic.CS0219.severity = none  # The variable '' is assigned but its value is never used	mcs
dotnet_diagnostic.CS0414.severity = none  # The field '' is assigned but its value is never used
#dotnet_diagnostic.CS0642.severity = none  # Possible mistaken empty statement
dotnet_diagnostic.CS0649.severity = none  # Field '' is never assigned to, and will always have its default value 
#dotnet_diagnostic.CS0660.severity = none  # '' defines operator == or operator != but does not override Object.Equals(object o)
#dotnet_diagnostic.CS0661.severity = none  # '' defines operator == or operator != but does not override Object.GetHashCode()
#dotnet_diagnostic.CS0675.severity = none  # Bitwise-or operator used on a sign-extended operand; consider casting to a smaller unsigned type first
#dotnet_diagnostic.CS0693.severity = none  # Type parameter '' has the same name as the type parameter from outer type ''
dotnet_diagnostic.IDE0016.severity = none  # Null check can be simplified
dotnet_diagnostic.IDE0017.severity = none  # Object initialization can be simplified
dotnet_diagnostic.IDE0018.severity = none  # Variable declaration can be inlined
dotnet_diagnostic.IDE0020.severity = none  # Use pattern matching
dotnet_diagnostic.IDE0028.severity = none  # Collection initialization can be simplified
dotnet_diagnostic.IDE0029.severity = none  # Null check can be simplified
dotnet_diagnostic.IDE0031.severity = none  # Null check can be simplified
dotnet_diagnostic.IDE0038.severity = none  # Use pattern matching
dotnet_diagnostic.IDE0039.severity = none  # Use local function
dotnet_diagnostic.IDE0041.severity = none  # Null check can be simplified
dotnet_diagnostic.IDE0044.severity = none  # Make field readonly
dotnet_diagnostic.IDE0051.severity = none  # Private member '' is unused.
dotnet_diagnostic.IDE0052.severity = none  # Private member '' can be removed as the value assigned to it is never used.
dotnet_diagnostic.IDE0054.severity = none  # Use compound assignment
dotnet_diagnostic.IDE0056.severity = none  # Indexing can be simplified
dotnet_diagnostic.IDE0057.severity = none  # Substring can be simplified
dotnet_diagnostic.IDE0059.severity = none  # Unnecessary assignment of a value to ''
dotnet_diagnostic.IDE0060.severity = none  # Remove unused parameter '' if it is not part of a shipped public API
dotnet_diagnostic.IDE0063.severity = none  # 'using' statement can be simplified
dotnet_diagnostic.IDE0066.severity = none  # Use 'switch' expression
dotnet_diagnostic.IDE0070.severity = none  # 'GetHashCode' implementation can be simplified
dotnet_diagnostic.IDE0075.severity = none  # Conditional expression can be simplified.
dotnet_diagnostic.IDE0083.severity = none  # Use pattern matching
dotnet_diagnostic.IDE0090.severity = none  # 'new' expression can be simplified
dotnet_diagnostic.IDE1005.severity = none  # Delegate invocation can be simplified.
dotnet_diagnostic.IDE1006.severity = none  # Naming rule violation: These words must begin with upper case characters: 
